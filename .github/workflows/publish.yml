name: Build plugin
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching any tag format, i.e. 1.0, 20.15.10
env:
  PLUGIN_NAME: ${{ github.event.repository.name }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Add this line to fix the 403 error
    steps:
      - uses: actions/checkout@v3  # Updated to v3
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      
      - name: Use Node.js
        uses: actions/setup-node@v3  # Updated to v3
        with:
          node-version: '18.x'  # Using a more stable version
      
      - name: Build
        id: build
        run: |
          mkdir ${{ env.PLUGIN_NAME }}
          
          # Use || true to continue if files don't exist
          cp README.md ${{ env.PLUGIN_NAME }} || true
          cp package.json ${{ env.PLUGIN_NAME }} || true
          cp SynapseLogo.png ${{ env.PLUGIN_NAME }} || true
          cp LICENSE ${{ env.PLUGIN_NAME }} || true
          cp index.js ${{ env.PLUGIN_NAME }} || true
          
          # Create zip
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
          ls -la
          
          # Fix for the deprecated set-output command
          echo "tag_name=$(git tag --sort version:refname | tail -n 1)" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          allowUpdates: true
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload zip file
        id: upload_zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
          asset_content_type: application/zip
      
      - name: Upload package.json
        id: upload_metadata
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.json
          asset_name: package.json
          asset_content_type: application/json